"""
Django settings for todo_list project.

Generated by 'django-admin startproject' using Django 2.2.17.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import sys
import environ
import boto3

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'ji!9((l4o8+(4kdtad++36k0p_eukqzvefl3(uk7)_(paow0cd'

env = environ.Env(
    DEBUG=(bool, False),
    TODO_DB_HOST=(str, 'localhost'),
    TODO_DB_NAME=(str, 'simple_todo_list'),
    TODO_DB_USER=(str, 'root'),
    TODO_DB_PASSWORD=(str, 'password'),
    TODO_DB_PORT=(int, 3306),
    TODO_DB_CONN_MAX_AGE=(int, 28800),
    TODO_SCM_SECRET_ID=(str, None),
    ALLOWED_HOSTS=(list, [])
)
environ.Env.read_env()

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('DEBUG')

ALLOWED_HOSTS = env('ALLOWED_HOSTS')


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'task',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'todo_list.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'todo_list.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

if env('TODO_DB_ENGINE') == 'sqlite3':
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': env('TODO_DB_NAME') or 'db.sqlite3'
        }
    }
elif env('TODO_SCM_SECRET_ID'):
    import json
    import base64

    session = boto3.session.Session()
    scm = session.client('secretsmanager')
    secret = scm.get_secret_value(SecretId=env('TODO_SCM_SECRET_ID'))
    if 'SecretString' in secret:
        secret_string = secret['SecretString']
    else:
        secret_string = base64.b64decode(serect['SecretBinary'])
    db = json.loads(secret_string)
    DATABASES = {
        'default': {
            'ENGINE': f'django.db.backends.{db["engine"]}',
            'HOST': db['host'],
            'NAME': env('TODO_DB_NAME'),
            'USER': db['username'],
            'PASSWORD': db['password'],
            'PORT': db['port'],
            'CONN_MAX_AGE': env('TODO_DB_CONN_MAX_AGE'),
            "OPTIONS": { "charset": "utf8mb4" },
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'HOST': env('TODO_DB_HOST'),
            'NAME': env('TODO_DB_NAME'),
            'USER': env('TODO_DB_USER'),
            'PASSWORD': env('TODO_DB_PASSWORD'),
            'PORT': env('TODO_DB_PORT'),
            'CONN_MAX_AGE': env('TODO_DB_CONN_MAX_AGE'),
            "OPTIONS": { "charset": "utf8mb4" },
        }
    }

if 'test' in sys.argv:
    DATABASES['default'] = {'ENGINE': 'django.db.backends.sqlite3'}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
